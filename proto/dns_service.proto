syntax = "proto3";
package dns_service;
option go_package = "yadro/gen/go/proto";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

message Hostname {
    string name = 1;
}

message DnsServer {
    string address = 1; // TODO: Use 'address' instead of 'ip' everywhere for consistency
}

message DnsServers {
    repeated DnsServer list = 1;
}

service DnsService {
    rpc SetHostname(Hostname) returns (Hostname) {
        option (google.api.http) = {
            post: "/api/hostname"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            summary: "Set the hostname on the server"
            description: "Changes the server's hostname via a `hostnamectl` command. Returns the new hostname if successfull"
        };
    }

    rpc GetHostname(google.protobuf.Empty) returns (Hostname) {
        option (google.api.http) = {
            get: "/api/hostname"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            summary: "Get the hostname from the server"
            description: "Gets the server's hostname via a `hostnamectl` command"
        };
    }

    rpc ListDnsServers(google.protobuf.Empty) returns (DnsServers) {
        option (google.api.http) = {
            get: "/api/dns-servers"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            summary: "Get a list of dns servers used by the callee"
            description: "TODO"
        };
    }

    rpc AddDnsServers(DnsServers) returns (DnsServers) {
        option (google.api.http) = {
            post: "/api/dns-servers"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            summary: "Add dns servers to the list used by the callee"
            description: "TODO"
        };
    }

    // "DELETE" method isn't good for requests with a body and specifying a list of dns-servers in query-params
    // is quite awful, so I chose to use "PUT" with a special endpoint
    rpc RemoveDnsServers(DnsServers) returns (DnsServers) {
        option (google.api.http) = {
            put: "/api/dns-servers/delete"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            summary: "Remove the specified dns servers from callee's list"
            description: "TODO"
        };
    }
}
